# -*- coding: utf-8 -*-
"""machinelearning2019.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EjYJBJc2NS1QmYW8E-0pIABqrDJ2BWFW
"""

import pandas as pd
import numpy as np
import math
import operator

from google.colab import files
uploaded = files.upload()

data = pd.read_csv("diabetes.csv")

data.head()

y = data['Outcome']

data.describe().T

#This function counts the number of intances in the dataset, Outcome is the label of the predict column
len(data["Outcome"])

data['Outcome'].max()

#This counts the total value of each label in the predictlabe column
data['Outcome'].value_counts()

#This value is for the highest count of labels from the predict column
max(data['Outcome'].value_counts())

#K value is determined by the maximum count of labels from the predict data column 
 #and divided by the length of the predict value then multiplied by 10
  k = max(data['Outcome'].value_counts())/len(data["Outcome"]) *10



output = round(k)

#Incase the value is an even number, the nearest odd number is chosen
print("K value: "+ str(output) )

#Drop the predict column
X = data.drop('Outcome', axis=1)

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3, random_state=6)

from sklearn.neighbors import KNeighborsClassifier
classifier = KNeighborsClassifier(n_neighbors=7)
classifier.fit(X_train,y_train)
print(classifier.score(X_test,y_test))

X.head()

